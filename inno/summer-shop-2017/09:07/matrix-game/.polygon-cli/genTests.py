#Working about 2-3 minutes

from os import *
from io import *
import random


n = [2, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6];
m = [2, 3, 3, 4, 3, 3, 1, 2, 2, 1, 1, 2, 2, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8];

si = [1, 2, 3, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 4, 4, 5, 5, 5, 5, 5, 6];
sj = [1, 3, 3, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 3, 5, 6, 7, 1, 5, 1, 8, 1, 3, 6, 7, 8, 6];

test = []
test += [ [[1, 2], [2, 1]] ];
test += [ [[1, 3, -1], [3, -1, -1], [1, -3, 1]] ];
test += [ [[1, 1, -1], [2, -1, -2], [1, -2, -1]] ];
test += [ [[1, 2, -1, 1], [3, 1, 1, 1], [-1, 2, -2, 1]] ];
test += [ [[1, 1, 1], [1, 1, 1], [1, 1, 1]] ];
test += [ [[1, 1, 1], [1, 1, 1], [1, 1, 1]] ];
test += [ [[1]] ];
test += [ [[1, -1]] ];
test += [ [[1, -1]] ];
test += [ [[1], [-1]] ];
test += [ [[1], [-1]] ];
test += [ [[100, -100], [-100, 100]] ];
test += [ [[100, -100], [-100, 100]] ];
test += [ [[-1, 6, 5, 4, 3, 2, 1, 5], [1, 2, 3, 2, 3, 2, 4, 1], 
           [3, -2, 4, -2, 4, -2, 7, -3], [2, -2, 2, -2, 2, -2, 2, 2],
           [1, -1, -3, 1, -2, -3, -3, 1], [1, 1, 1, 1, -1, -3, 1, -7]] ];
test += [ [[-1, 6, 5, 4, 3, 2, 1, 5], [1, 2, 3, 2, 3, 2, 4, 1], 
           [3, -2, 4, -2, 4, -2, 7, -3], [2, -2, 2, -2, 2, -2, 2, 2],
           [1, -1, -3, 1, -2, -3, -3, 1], [1, 1, 1, 1, -1, -3, 1, -7]] ];
test += [ [[-1, 6, 5, 4, 3, 2, 1, 5], [1, 2, 3, 2, 3, 2, 4, 1], 
           [3, -2, 4, -2, 4, -2, 7, -3], [2, -2, 2, -2, 2, -2, 2, 2],
           [1, -1, -3, 1, -2, -3, -3, 1], [1, 1, 1, 1, -1, -3, 1, -7]] ];
test += [ [[-1, 6, 5, 4, 3, 2, 1, 5], [1, 2, 3, 2, 3, 2, 4, 1], 
           [3, -2, 4, -2, 4, -2, 7, -3], [2, -2, 2, -2, 2, -2, 2, 2],
           [1, -1, -3, 1, -2, -3, -3, 1], [1, 1, 1, 1, -1, -3, 1, -7]] ];
test += [ [[-1, 6, 5, 4, 3, 2, 1, 5], [1, 2, 3, 2, 3, 2, 4, 1], 
           [3, -2, 4, -2, 4, -2, 7, -3], [2, -2, 2, -2, 2, -2, 2, 2],
           [1, -1, -3, 1, -2, -3, -3, 1], [1, 1, 1, 1, -1, -3, 1, -7]] ];
test += [ [[-1, 6, 5, 4, 3, 2, 1, 5], [1, 2, 3, 2, 3, 2, 4, 1], 
           [3, -2, 4, -2, 4, -2, 7, -3], [2, -2, 2, -2, 2, -2, 2, 2],
           [1, -1, -3, 1, -2, -3, -3, 1], [1, 1, 1, 1, -1, -3, 1, -7]] ];
test += [ [[-1, 6, 5, 4, 3, 2, 1, 5], [1, 2, 3, 2, 3, 2, 4, 1], 
           [3, -2, 4, -2, 4, -2, 7, -3], [2, -2, 2, -2, 2, -2, 2, 2],
           [1, -1, -3, 1, -2, -3, -3, 1], [1, 1, 1, 1, -1, -3, 1, -7]] ];
test += [ [[-1, 6, 5, 4, 3, 2, 1, 5], [1, 2, 3, 2, 3, 2, 4, 1], 
           [3, -2, 4, -2, 4, -2, 7, -3], [2, -2, 2, -2, 2, -2, 2, 2],
           [1, -1, -3, 1, -2, -3, -3, 1], [1, 1, 1, 1, -1, -3, 1, -7]] ];
test += [ [[-1, 6, 5, 4, 3, 2, 1, 5], [1, 2, 3, 2, 3, 2, 4, 1], 
           [3, -2, 4, -2, 4, -2, 7, -3], [2, -2, 2, -2, 2, -2, 2, 2],
           [1, -1, -3, 1, -2, -3, -3, 1], [1, 1, 1, 1, -1, -3, 1, -7]] ];
test += [ [[-1, 6, 5, 4, 3, 2, 1, 5], [1, 2, 3, 2, 3, 2, 4, 1], 
           [3, -2, 4, -2, 4, -2, 7, -3], [2, -2, 2, -2, 2, -2, 2, 2],
           [1, -1, -3, 1, -2, -3, -3, 1], [1, 1, 1, 1, -1, -3, 1, -7]] ];
test += [ [[-1, 6, 5, 4, 3, 2, 1, 5], [1, 2, 3, 2, 3, 2, 4, 1], 
           [3, -2, 4, -2, 4, -2, 7, -3], [2, -2, 2, -2, 2, -2, 2, 2],
           [1, -1, -3, 1, -2, -3, -3, 1], [1, 1, 1, 1, -1, -3, 1, -7]] ];
test += [ [[-1, 6, 5, 4, 3, 2, 1, 5], [1, 2, 3, 2, 3, 2, 4, 1], 
           [3, -2, 4, -2, 4, -2, 7, -3], [2, -2, 2, -2, 2, -2, 2, 2],
           [1, -1, -3, 1, -2, -3, -3, 1], [1, 1, 1, 1, -1, -3, 1, -7]] ];
test += [ [[-1, 6, 5, 4, 3, 2, 1, 5], [1, 2, 3, 2, 3, 2, 4, 1], 
           [3, -2, 4, -2, 4, -2, 7, -3], [2, -2, 2, -2, 2, -2, 2, 2],
           [1, -1, -3, 1, -2, -3, -3, 1], [1, 1, 1, 1, -1, -3, 1, -7]] ];
test += [ [[-1, 6, 5, 4, 3, 2, 1, 5], [1, 2, 3, 2, 3, 2, 4, 1], 
           [3, -2, 4, -2, 4, -2, 7, -3], [2, -2, 2, -2, 2, -2, 2, 2],
           [1, -1, -3, 1, -2, -3, -3, 1], [1, 1, 1, 1, -1, -3, 1, -7]] ];

def printTest(testNo, k):
	tst = open("%d" % testNo, "w")
	tst.write(str(n[k]) + " " + str(m[k]) + "\n")
	
	for i in range(n[k]):
		for j in range(m[k] - 1):
			tst.write(str(test[k][i][j]) + " ")
		tst.write(str(test[k][i][m[k] - 1]) + "\n")

	tst.write(str(si[k]) + " " + str(sj[k]) + "\n")
	tst.close()     

def print_rand_draw(testNo):
	tst = open("%d" % testNo, "w")
	tst.write("100 100\n");
	for i in range(100):
		for j in range(99):
			if (i == 0 and j == 0):
				tst.write("1 ")
				continue
			
			c = random.randint(1, 2)
			if (c == 1):
				tst.write("1 ")
			if (c == 2):
				tst.write("-1 ")
		if (i == 99):
			tst.write("-1\n")
			continue
		c = random.randint(1, 2)
		if (c == 1):
			tst.write("1\n")
		if (c == 2):
			tst.write("-1\n")
	
	c = random.randint(1, 100)
	tst.write(str(c) + " ")
	c = random.randint(1, 100)
	tst.write(str(c) + "\n")	
	tst.close()


def print_rand(testNo):
	tst = open("%d" % testNo, "w")
	tst.write("100 100\n");
	for i in range(100):
		for j in range(99):
			c = random.randint(1, 2)
			if (c == 1):
				tst.write("1 ")
			if (c == 2):
				tst.write("-1 ")
		c = random.randint(1, 2)
		if (c == 1):
			tst.write("1\n")
		if (c == 2):
			tst.write("-1\n")
	
	c = random.randint(1, 100)
	tst.write(str(c) + " ")
	c = random.randint(1, 100)
	tst.write(str(c) + "\n")	
	tst.close()

def printRand(testNo):
	tst = open("%d" % testNo, "w")
	tst.write("100 100\n");
	for i in range(100):
		for j in range(99):
			b = random.randint(1, 100)
			c = random.randint(1, 3)
			if (c == 1):
				tst.write(str(-b) + " ")
			if (c == 2 or c == 3):
				tst.write(str(b) + " ")
		b = random.randint(1, 100)
		c = random.randint(1, 3)
		if (c == 1):
			tst.write(str(-b) + "\n")
		if (c == 2 or c == 3):
			tst.write(str(b) + "\n")
		
	c = random.randint(1, 100)
	tst.write(str(c) + " ")
	c = random.randint(1, 100)
	tst.write(str(c) + "\n")	
	tst.close()

                                 
testNo = 0;
for k in range(27):
	testNo += 1
	printTest(testNo, k);

random.seed(313110);
for k in range(4):
	testNo += 1
	print_rand_draw(testNo)

for k in range(6):
	testNo += 1
	print_rand(testNo)



for k in range(13):
	testNo += 1
	printRand(testNo);